----- Part 1

--CREATE TABLE
CREATE TABLE PEOPLE(ID BIGINT AUTO_INCREMENT, FIRST_NAME CHARACTER VARYING(255), LAST_NAME CHARACTER VARYING(255), DOB TIMESTAMP, SALARY NUMERIC);

-- Add record to table
INSERT INTO PEOPLE (FIRST_NAME, LAST_NAME, DOB, SALARY) VALUES('Harry', 'Johnson', '1950-03-15 10:45:10', 100000.00);
INSERT INTO PEOPLE (FIRST_NAME, LAST_NAME, DOB, SALARY) VALUES('Jack', 'Johnson', '2000-01-10 8:45:10', 50000.00);
INSERT INTO PEOPLE (FIRST_NAME, LAST_NAME, DOB, SALARY) VALUES('Mary', 'Johnson', '2003-05-13 17:30:10', 2000.00);
INSERT INTO PEOPLE (FIRST_NAME, LAST_NAME, DOB, SALARY) VALUES('Susan', 'Johnson', '1951-10-31 19:13:43', 200000.00);
INSERT INTO PEOPLE (FIRST_NAME, LAST_NAME, DOB, SALARY) VALUES('Jack', 'Smith', '1970-10-31 19:13:43', 75000.00);

-- Getting from table
SELECT * FROM PEOPLE;
SELECT FIRST_NAME, LAST_NAME FROM PEOPLE;

SELECT * FROM PEOPLE WHERE LAST_NAME = 'Johnson';
SELECT * FROM PEOPLE WHERE LAST_NAME LIKE '%hn%';
SELECT * FROM PEOPLE WHERE LAST_NAME LIKE 'Smi%';

SELECT * FROM PEOPLE WHERE SALARY > 99000;

SELECT * FROM PEOPLE WHERE DOB < DATE '1980-01-01';

SELECT * FROM PEOPLE WHERE DOB < DATE '1980-01-01' AND FIRST_NAME LIKE 'H%';

-- Sorting. ASC - default
SELECT * FROM PEOPLE ORDER BY FIRST_NAME DESC;
SELECT * FROM PEOPLE ORDER BY FIRST_NAME ASC; 

SELECT * FROM PEOPLE ORDER BY DOB DESC, FIRST_NAME DESC; 

-- Grouping
SELECT * FROM PEOPLE GROUP BY LAST_NAME;
SELECT SUM(SALARY) FROM PEOPLE GROUP BY LAST_NAME;
SELECT LAST_NAME  FROM PEOPLE GROUP BY LAST_NAME;

SELECT AVG(SALARY), LAST_NAME  FROM PEOPLE GROUP BY LAST_NAME;
SELECT CAST(AVG(SALARY) AS BIGINT), LAST_NAME  FROM PEOPLE GROUP BY LAST_NAME;
SELECT LAST_NAME, CAST(AVG(SALARY) AS BIGINT)  FROM PEOPLE GROUP BY LAST_NAME;

-- Databese Functions
-- COUNT
SELECT LAST_NAME, COUNT(*)  FROM PEOPLE GROUP BY LAST_NAME;
SELECT LAST_NAME, COUNT(LAST_NAME)  FROM PEOPLE GROUP BY LAST_NAME;

-- UPPER
SELECT UPPER(LAST_NAME), FIRST_NAME, DOB FROM PEOPLE;

-- CONCAT
SELECT CONCAT(LAST_NAME, ',', FIRST_NAME), DOB FROM PEOPLE;
SELECT CONCAT(LAST_NAME, ',', FIRST_NAME) AS NAME, DOB FROM PEOPLE;

SELECT CONCAT(UPPER(LAST_NAME), ',', LOWER(FIRST_NAME)) AS NAME, DOB FROM PEOPLE;

-- DATEADD
SELECT LAST_NAME, FIRST_NAME, DATEADD(YEAR, 10, DOB) AS NEW_DOB FROM PEOPLE; 

SELECT '1970-10-31';

--REPLACE
SELECT REGEXP_REPLACE('1970-10-31', '\d{4}-', 'aaaa-');

-- update record in a table
UPDATE PEOPLE SET FIRST_NAME='Sabrina' WHERE FIRST_NAME='Susan'
UPDATE PEOPLE SET LAST_NAME='Jonson' WHERE LAST_NAME='Johnson'; 

--DELETE 
DELETE FROM PEOPLE WHERE LAST_NAME='Smith';

--ADD another column
ALTER TABLE PEOPLE ADD COLUMN EMAIL CHARACTER VARYING(255);
UPDATE PEOPLE SET EMAIL='`nothing@nowhere.com';

--Remove column
ALTER TABLE PEOPLE DROP COLUMN EMAIL;


ALTER TABLE PEOPLE ADD COLUMN DELETE_FLAG BOOLEAN;
UPDATE PEOPLE SET DELETE_FLAG=FALSE;

UPDATE PEOPLE SET DELETE_FLAG=TRUE WHERE LAST_NAME='Smith';

SELECT * FROM PEOPLE;

----- Part 2

ALTER TABLE PEOPLE ADD COLUMN EMAIL CHARACTER VARYING(255);

SELECT * FROM PEOPLE;

SELECT COUNT(*) FROM PEOPLE;

SELECT * FROM PEOPLE FETCH FIRST 100 ROWS ONLY

--// OFFSET - skip rows
SELECT * FROM PEOPLE OFFSET 5000000 FETCH FIRST 1 ROW ONLY

SELECT * FROM PEOPLE p WHERE ID=50007

-- CREATE INDEX
CREATE INDEX ID_IDX ON PEOPLE(ID)

SELECT * FROM PEOPLE WHERE EMAIL='lester.dugan@yahoo.com'

CREATE TABLE ADDRESSES (ID BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY, STREET_ADDRESS CHARACTER VARYING(255), ADDRESS2 CHARACTER VARYING(255), CITY CHARACTER VARYING(255), STATE CHARACTER VARYING(2), POSTCODE CHARACTER VARYING(50), COUNTY CHARACTER VARYING(255), REGION CHARACTER VARYING(255), COUNTRY CHARACTER VARYING(100));

SELECT * FROM ADDRESSES;
SELECT * FROM PEOPLE FETCH FIRST 10 ROWS ONLY;

ALTER TABLE PEOPLE ADD COLUMN PRIMARY_ADDRESS BIGINT REFERENCES ADDRESSES (ID); 

----- Part 3


ALTER TABLE PEOPLE ALTER COLUMN PRIMARY_ADDRESS RENAME TO HOME_ADDRESS

SELECT * FROM ADDRESSES

SELECT * FROM PEOPLE WHERE HOME_ADDRESS = 4

----- Part 4

SELECT * FROM PEOPLE FETCH FIRST 10 ROWS ONLY

SELECT * FROM PEOPLE WHERE HOME_ADDRESS = 4

SELECT * FROM ADDRESSES

SELECT PEOPLE.FIRST_NAME, PEOPLE.LAST_NAME, ADDRESSES.STREET_ADDRESS , ADDRESSES.CITY  FROM PEOPLE AS PEOPLE
--JOIN ADDRESSES AS ADDRESSES 
LEFT OUTER JOIN ADDRESSES AS ADDRESSES 
ON PEOPLE.HOME_ADDRESS = ADDRESSES.ID
WHERE PEOPLE.ID = 5000838

SELECT 
P.ID, P.FIRST_NAME, P.LAST_NAME, P.DOB, P.SALARY, P.HOME_ADDRESS,
A.ID, A.STREET_ADDRESS, A.ADDRESS2, A.CITY, A.STATE, A.POSTCODE, A.COUNTY, A.REGION, A.COUNTRY
FROM PEOPLE AS P 
LEFT OUTER JOIN ADDRESSES AS A ON P.HOME_ADDRESS = A.ID
WHERE P.ID=5000838


---PART 5
------------------- comment
To summarize the "happy path" of your steps, you did:

1. CREATE TABLE PEOPLE(ID BIGINT AUTO_INCREMENT, FIRST_NAME CHARACTER VARYING(255), LAST_NAME CHARACTERVARYING(255), DOB TIMESTAMP, SALARY NUMERIC);

2. ALTER TABLE PEOPLE ADD CONSTRAINT PRIMARY_KEY_ID PRIMARY KEY (ID)

3. ALTER TABLE PEOPLE ADD COLUMN PARENT_ID BIGINT REFERENCES PEOPLE(ID);

That should all be fine and work. You had to create the primary key constraint before you could create the PARENT_ID column referencing the PEOPLE.ID column because the resulting foreign key constraint can only reference primary keys or unique keys, that's why you initially got an error.

I don't see anything further wrong with this now. Are you telling me there's still something else wrong?

FYI, in real-life, it would be better to define your table with its primary key column from the start so you don't have to do these extra steps but in the course, I didn't start that way.

----------------------------------------------


ALTER TABLE PEOPLE ADD COLUMN BUSINESS_ADDRESS BIGINT REFERENCES ADDRESSES (ID)


--ALTER TABLE PEOPLE ADD COLUMN PARENT_ID BIGINT REFERENCES PEOPLE (ID)

--ALTER TABLE PEOPLE DROP COLUMN PARENT_ID

ALTER TABLE PEOPLE ADD COLUMN PARENT_ID BIGINT REFERENCES PEOPLE (ID)

ALTER TABLE PEOPLE ADD COLUMN PARENT_ID BIGINT


SELECT * FROM PEOPLE

-- 228. Fetching Children in One Join

SELECT * FROM PEOPLE WHERE PARENT_ID IS NOT NULL

SELECT 
PARENT.ID AS PARENT_ID, PARENT.FIRST_NAME AS PARENT_FIRST_NAME, PARENT.LAST_NAME AS PARENT_LAST_NAME, PARENT.DOB AS PARENT_DOB, PARENT.SALARY AS PARENT_SALARY, PARENT.EMAIL AS PARENT_EMAIL,
CHILD.ID AS CHILD_ID, CHILD.FIRST_NAME AS CHILD_FIRST_NAME, CHILD.LAST_NAME AS CHILD_LAST_NAME, CHILD.DOB AS CHILD_DOB, CHILD.SALARY AS CHILD_SALARY, CHILD.EMAIL AS CHILD_EMAIL
FROM PEOPLE AS PARENT
LEFT OUTER JOIN PEOPLE AS CHILD ON PARENT.ID = CHILD .PARENT_ID
WHERE PARENT.ID = 5000050

SELECT 
PARENT.ID AS PARENT_ID, PARENT.FIRST_NAME AS PARENT_FIRST_NAME, PARENT.LAST_NAME AS PARENT_LAST_NAME, PARENT.DOB AS PARENT_DOB, PARENT.SALARY AS PARENT_SALARY, PARENT.EMAIL AS PARENT_EMAIL,
CHILD.ID AS CHILD_ID, CHILD.FIRST_NAME AS CHILD_FIRST_NAME, CHILD.LAST_NAME AS CHILD_LAST_NAME, CHILD.DOB AS CHILD_DOB, CHILD.SALARY AS CHILD_SALARY, CHILD.EMAIL AS CHILD_EMAIL,
HOME_A.ID AS HOME_A_ID, HOME_A.STREET_ADDRESS AS HOME_A_STREET_ADDRESS, HOME_A.ADDRESS2 AS HOME_A_ADDRESS2, HOME_A.CITY AS HOME_A_CITY, HOME_A.STATE AS HOME_A_STATE, HOME_A.POSTCODE AS HOME_A_POSTCODE, HOME_A.COUNTY AS HOME_A_COUNTY, HOME_A.REGION AS HOME_A_REGION, HOME_A.COUNTRY AS HOME_A_COUNTRY,
BUSINESS_A.ID AS BUSINESS_A_ID, BUSINESS_A.STREET_ADDRESS AS BUSINESS_A_STREET_ADDRESS, BUSINESS_A.ADDRESS2 AS BUSINESS_A_ADDRESS2, BUSINESS_A.CITY AS BUSINESS_A_CITY, BUSINESS_A.STATE AS BUSINESS_A_STATE, BUSINESS_A.POSTCODE AS BUSINESS_A_POSTCODE, BUSINESS_A.COUNTY AS BUSINESS_A_COUNTY, BUSINESS_A.REGION AS BUSINESS_A_REGION, BUSINESS_A.COUNTRY AS BUSINESS_A_COUNTRY
FROM PEOPLE AS PARENT
LEFT OUTER JOIN PEOPLE AS CHILD ON PARENT.ID = CHILD.PARENT_ID
LEFT OUTER JOIN ADDRESSES AS HOME_A ON PARENT.HOME_ADDRESS = HOME_A.ID
LEFT OUTER JOIN ADDRESSES AS BUSINESS_A ON PARENT.BUSINESS_ADDRESS = BUSINESS_A.ID
WHERE PARENT.ID = 5000050


-- 232. Join Tables
CREATE TABLE PARENT_CHILD (PARENT_ID BIGINT REFERENCES PEOPLE (ID), CHILD_ID BIGINT REFERENCES PEOPLE (ID))

SELECT * FROM PEOPLE

INSERT INTO PARENT_CHILD VALUES (1, 2)
INSERT INTO PARENT_CHILD VALUES (1, 3)

SELECT * FROM PARANT_CHILD

SELECT 
PARENT.FIRST_NAME AS PARENT_FIRST_NAME, PARENT.LAST_NAME AS PARENT_LAST_NAME, 
CHILD.FIRST_NAME AS CHILD_FIRST_NAME, CHILD.LAST_NAME AS CHILD_LAST_NAME
FROM PEOPLE AS PARENT 
LEFT OUTER JOIN PARENT_CHILD AS PC ON PARENT.ID = PC.PARANT_ID
LEFT OUTER JOIN PEOPLE AS CHILD ON CHILD.ID = PC.CHILD_ID
